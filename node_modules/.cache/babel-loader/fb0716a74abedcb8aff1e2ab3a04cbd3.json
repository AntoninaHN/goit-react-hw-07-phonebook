{"ast":null,"code":"var _jsxFileName = \"/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/components/ContactList/ContactList.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ContactList(_ref) {\n  let {\n    contacts,\n    deleteContact\n  } = _ref;\n  const elements = contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n    className: styles.list,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.span,\n      children: [contact.name, \":\", contact.number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      id: contact.id,\n      onClick: () => deleteContact(contact.id),\n      className: styles.button,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, contact.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.list_ul,\n      children: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n\n_c = ContactList;\nexport default ContactList;\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string\n  }).isRequired),\n  deleteContact: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/components/ContactList/ContactList.jsx"],"names":["React","PropTypes","styles","ContactList","contacts","deleteContact","elements","map","contact","list","span","name","number","id","button","list_ul","propTypes","arrayOf","shape","string","isRequired","func"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;;;AACA,SAASC,WAAT,OAAkD;AAAA,MAA7B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA6B;AAEhD,QAAMC,QAAQ,GAAGF,QAAQ,CAACG,GAAT,CAAcC,OAAD,iBAC5B;AAAqB,IAAA,SAAS,EAAEN,MAAM,CAACO,IAAvC;AAAA,4BACE;AAAM,MAAA,SAAS,EAAEP,MAAM,CAACQ,IAAxB;AAAA,iBAA+BF,OAAO,CAACG,IAAvC,OAA8CH,OAAO,CAACI,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,EAAE,EAAEJ,OAAO,CAACK,EAFd;AAGE,MAAA,OAAO,EAAE,MAAMR,aAAa,CAACG,OAAO,CAACK,EAAT,CAH9B;AAIE,MAAA,SAAS,EAAEX,MAAM,CAACY,MAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,KAASN,OAAO,CAACK,EAAjB;AAAA;AAAA;AAAA;AAAA,UADe,CAAjB;AAgBE,sBACE;AAAA,2BACE;AAAI,MAAA,SAAS,EAAEX,MAAM,CAACa,OAAtB;AAAA,gBACGT;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KAzBMH,W;AA2BT,eAAeA,WAAf;AAGAA,WAAW,CAACa,SAAZ,GAAwB;AAEtBZ,EAAAA,QAAQ,EAAEH,SAAS,CAACgB,OAAV,CACRhB,SAAS,CAACiB,KAAV,CAAgB;AACdL,IAAAA,EAAE,EAAEZ,SAAS,CAACkB,MADA;AAEdR,IAAAA,IAAI,EAAEV,SAAS,CAACkB,MAFF;AAGdP,IAAAA,MAAM,EAAEX,SAAS,CAACkB;AAHJ,GAAhB,EAIGC,UALK,CAFY;AAStBf,EAAAA,aAAa,EAAEJ,SAAS,CAACoB,IAAV,CAAeD;AATR,CAAxB","sourcesContent":["\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactList.module.css';\nfunction ContactList({ contacts, deleteContact }) {\n\n  const elements = contacts.map((contact) => (\n    <li key={contact.id} className={styles.list}>\n      <span className={styles.span}>{contact.name}:{contact.number}</span>\n     \n      <button\n        type=\"button\"\n        id={contact.id}\n        onClick={() => deleteContact(contact.id)}\n        className={styles.button}\n      >\n        Delete\n      </button>\n    </li>\n  ))\n\n\n    return (\n      <div>\n        <ul className={styles.list_ul}>\n          {elements}\n        </ul>\n      </div>\n    );\n  }\n  \nexport default ContactList;\n\n\nContactList.propTypes = {\n  \n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }).isRequired\n  ),\n  deleteContact: PropTypes.func.isRequired\n \n};"]},"metadata":{},"sourceType":"module"}