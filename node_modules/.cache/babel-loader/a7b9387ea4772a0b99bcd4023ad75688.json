{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport * as operations from '../../redux/operations';\nexport const contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState: {\n    items: [],\n    filter: \"\",\n    editedContact: null,\n    isLoading: false,\n    error: null\n  },\n  reducers: {\n    changeFilter(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      return { ...state,\n        filter: payload\n      };\n    },\n\n    editOnClick(state, _ref2) {\n      let {\n        payload\n      } = _ref2;\n      return { ...state,\n        editedContact: payload\n      };\n    }\n\n  },\n  extraReducers: {\n    [addContact.pending]: state => ({ ...state,\n      isLoading: true,\n      error: null\n    }),\n    [addContact.fulfilled]: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      return { ...state,\n        isLoading: false,\n        items: [...state.items, payload]\n      };\n    },\n    [addContact.rejected]: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      return { ...state,\n        isLoading: false,\n        error: payload\n      };\n    },\n    [removeContact.pending]: state => ({ ...state,\n      isLoading: true,\n      error: null\n    }),\n    [removeContact.fulfilled]: (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      return { ...state,\n        isLoading: false,\n        error: null,\n        items: state.items.filter(_ref6 => {\n          let {\n            id\n          } = _ref6;\n          return id !== payload;\n        })\n      };\n    },\n    [removeContact.rejected]: state => ({ ...state,\n      isLoading: false,\n      error: null\n    }),\n    [getContacts.pending]: state => ({ ...state,\n      isLoading: true,\n      error: null\n    }),\n    [getContacts.fulfilled]: (state, _ref7) => {\n      let {\n        payload\n      } = _ref7;\n      return { ...state,\n        isLoading: false,\n        error: null,\n        items: [...payload]\n      };\n    },\n    [getContacts.rejected]: (state, _ref8) => {\n      let {\n        payload\n      } = _ref8;\n      return { ...state,\n        isLoading: false,\n        error: payload\n      };\n    },\n    [editContact.pending]: state => ({ ...state,\n      isLoading: true,\n      error: null\n    }),\n    [editContact.fulfilled]: (state, _ref9) => {\n      let {\n        payload\n      } = _ref9;\n      return { ...state,\n        isLoading: false,\n        error: null,\n        editedContact: null,\n        items: state.items.map(item => item.id !== payload.id ? item : payload)\n      };\n    },\n    [editContact.rejected]: (state, _ref10) => {\n      let {\n        payload\n      } = _ref10;\n      return { ...state,\n        isLoading: false,\n        error: payload\n      };\n    }\n  }\n});\nexport default contactsSlice.reducer;\nexport const {\n  changeFilter,\n  editOnClick\n} = contactsSlice.actions;","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/redux/slice.js"],"names":["createSlice","operations","contactsSlice","name","initialState","items","filter","editedContact","isLoading","error","reducers","changeFilter","state","payload","editOnClick","extraReducers","addContact","pending","fulfilled","rejected","removeContact","id","getContacts","editContact","map","item","reducer","actions"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport * as operations from '../../redux/operations'\n\nexport const contactsSlice = createSlice({\n    name: \"contacts\",\n    initialState: {\n      items: [],\n      filter: \"\",\n      editedContact: null,\n      isLoading: false,\n      error: null,\n    },\n    reducers: {\n      changeFilter(state, { payload }) {\n        return { ...state, filter: payload };\n      },\n      editOnClick(state, { payload }) {\n        return { ...state, editedContact: payload };\n      },\n    },\n    extraReducers: {\n      [addContact.pending]: (state) => ({\n        ...state,\n        isLoading: true,\n        error: null,\n      }),\n      [addContact.fulfilled]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        items: [...state.items, payload],\n      }),\n      [addContact.rejected]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        error: payload,\n      }),\n      [removeContact.pending]: (state) => ({\n        ...state,\n        isLoading: true,\n        error: null,\n      }),\n      [removeContact.fulfilled]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        error: null,\n        items: state.items.filter(({ id }) => id !== payload),\n      }),\n      [removeContact.rejected]: (state) => ({\n        ...state,\n        isLoading: false,\n        error: null,\n      }),\n      [getContacts.pending]: (state) => ({\n        ...state,\n        isLoading: true,\n        error: null,\n      }),\n      [getContacts.fulfilled]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        error: null,\n        items: [...payload],\n      }),\n      [getContacts.rejected]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        error: payload,\n      }),\n      [editContact.pending]: (state) => ({\n        ...state,\n        isLoading: true,\n        error: null,\n      }),\n      [editContact.fulfilled]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        error: null,\n        editedContact: null,\n        items: state.items.map((item) =>\n          item.id !== payload.id ? item : payload\n        ),\n      }),\n      [editContact.rejected]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        error: payload,\n      }),\n    },\n  });\n  \n  export default contactsSlice.reducer;\n  export const { changeFilter, editOnClick } = contactsSlice.actions;"]},"metadata":{},"sourceType":"module"}