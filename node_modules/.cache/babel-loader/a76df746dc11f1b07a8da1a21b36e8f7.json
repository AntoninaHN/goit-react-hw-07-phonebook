{"ast":null,"code":"// import { useState, useRef, memo } from 'react';\n// import { nanoid } from 'nanoid';\n// import PropTypes from 'prop-types';\n// import styles from './ContactForm.module.css';\n// const initialState = {\n//   name: '',\n//   number: '',\n// };\n// const ContactForm = ({ onChange }) => {\n//   const [contact, setContact] = useState(initialState);\n//   const nameInputId = useRef(nanoid());\n//   const numberInputId = useRef(nanoid());\n//   const handleChange = event => {\n//     const { value, name } = event.target;\n//     setContact({\n//       ...contact,\n//       [name]: value,\n//     });\n//   };\n//   const handleSubmit = event => {\n//     event.preventDefault();\n//     onChange(contact);\n//     resetForm();\n//   };\n//   const resetForm = () => {\n//     setContact(initialState);\n//   };\n//   return (\n//     <>\n//       <form className={styles.form} onSubmit={handleSubmit}>\n//         <div className={styles.inputList}>\n//           <label className={styles.label} htmlFor={nameInputId.current}>\n//             Name\n//           </label>\n//           <input\n//             className={styles.input}\n//             type=\"text\"\n//             name=\"name\"\n//             value={contact.name}\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//             required\n//             onChange={handleChange}\n//             id={nameInputId.current}\n//           />\n//         </div>\n//         <div className={styles.inputList}>\n//           <label className={styles.label} htmlFor={numberInputId.current}>\n//             Number\n//           </label>\n//           <input\n//             className={styles.input}\n//             type=\"tel\"\n//             name=\"number\"\n//             value={contact.number}\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//             onChange={handleChange}\n//             required\n//             id={numberInputId.current}\n//           />\n//         </div>\n//         <button className={styles.button} type=\"submit\">\n//           Add contact\n//         </button>\n//       </form>\n//     </>\n//   );\n// };\n// export default memo(ContactForm);\n// ContactForm.propTypes = {\n//   onChange: PropTypes.func.isRequired,\n// };","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA","sourcesContent":["// import { useState, useRef, memo } from 'react';\n// import { nanoid } from 'nanoid';\n// import PropTypes from 'prop-types';\n\n// import styles from './ContactForm.module.css';\n\n// const initialState = {\n//   name: '',\n//   number: '',\n// };\n\n// const ContactForm = ({ onChange }) => {\n//   const [contact, setContact] = useState(initialState);\n//   const nameInputId = useRef(nanoid());\n//   const numberInputId = useRef(nanoid());\n//   const handleChange = event => {\n//     const { value, name } = event.target;\n//     setContact({\n//       ...contact,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleSubmit = event => {\n//     event.preventDefault();\n//     onChange(contact);\n//     resetForm();\n//   };\n\n//   const resetForm = () => {\n//     setContact(initialState);\n//   };\n\n//   return (\n//     <>\n//       <form className={styles.form} onSubmit={handleSubmit}>\n//         <div className={styles.inputList}>\n//           <label className={styles.label} htmlFor={nameInputId.current}>\n//             Name\n//           </label>\n//           <input\n//             className={styles.input}\n//             type=\"text\"\n//             name=\"name\"\n//             value={contact.name}\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//             required\n//             onChange={handleChange}\n//             id={nameInputId.current}\n//           />\n//         </div>\n//         <div className={styles.inputList}>\n//           <label className={styles.label} htmlFor={numberInputId.current}>\n//             Number\n//           </label>\n//           <input\n//             className={styles.input}\n//             type=\"tel\"\n//             name=\"number\"\n//             value={contact.number}\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//             onChange={handleChange}\n//             required\n//             id={numberInputId.current}\n//           />\n//         </div>\n//         <button className={styles.button} type=\"submit\">\n//           Add contact\n//         </button>\n//       </form>\n//     </>\n//   );\n// };\n\n\n// export default memo(ContactForm);\n\n// ContactForm.propTypes = {\n//   onChange: PropTypes.func.isRequired,\n// };\n"]},"metadata":{},"sourceType":"module"}