{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\"; // import { addContact, fetchContacts, removeContact} from './operations'\n\nimport { addContactApi, fetchContacts, removeContactApi } from './operations';\nexport const contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState: {\n    items: [],\n    filter: \"\",\n    editedContact: null,\n    isLoading: false,\n    error: null\n  },\n  reducers: {\n    changeFilter(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      return { ...state,\n        filter: payload\n      };\n    },\n\n    editOnClick(state, _ref2) {\n      let {\n        payload\n      } = _ref2;\n      return { ...state,\n        editedContact: payload\n      };\n    }\n\n  },\n  extraReducers: {\n    // [addContact.pending]: (state) => ({\n    [addContactApi.pending]: state => ({ ...state,\n      isLoading: true,\n      error: null\n    }),\n    // [addContact.fulfilled]: (state, { payload }) => ({\n    [addContactApi.fulfilled]: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      return { ...state,\n        isLoading: false,\n        items: [...state.items, payload]\n      };\n    },\n    // [addContact.rejected]: (state, { payload }) => ({\n    [addContactApi.rejected]: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      return { ...state,\n        isLoading: false,\n        error: payload\n      };\n    },\n    // [removeContact.pending]: (state) => ({\n    [removeContactApi.pending]: state => ({ ...state,\n      isLoading: true,\n      error: null\n    }),\n    // [removeContact.fulfilled]: (state, { payload }) => ({\n    [removeContactApi.fulfilled]: (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      return { ...state,\n        isLoading: false,\n        error: null,\n        items: state.items.filter(_ref6 => {\n          let {\n            id\n          } = _ref6;\n          return id !== payload;\n        })\n      };\n    },\n    // [removeContact.rejected]: (state) => ({\n    [removeContactApi.rejected]: state => ({ ...state,\n      isLoading: false,\n      error: null\n    }),\n    [fetchContacts.pending]: state => ({ ...state,\n      isLoading: true,\n      error: null\n    }),\n    [fetchContacts.fulfilled]: (state, _ref7) => {\n      let {\n        payload\n      } = _ref7;\n      return { ...state,\n        isLoading: false,\n        error: null,\n        items: [...payload]\n      };\n    },\n    [fetchContacts.rejected]: (state, _ref8) => {\n      let {\n        payload\n      } = _ref8;\n      return { ...state,\n        isLoading: false,\n        error: payload\n      };\n    }\n  }\n});\nexport default contactsSlice.reducer;\nexport const {\n  changeFilter,\n  editOnClick\n} = contactsSlice.actions;","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/redux/slice.js"],"names":["createSlice","addContactApi","fetchContacts","removeContactApi","contactsSlice","name","initialState","items","filter","editedContact","isLoading","error","reducers","changeFilter","state","payload","editOnClick","extraReducers","pending","fulfilled","rejected","id","reducer","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B,C,CACA;;AAEA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,gBAAvC,QAA8D,cAA9D;AACA,OAAO,MAAMC,aAAa,GAAGJ,WAAW,CAAC;AACrCK,EAAAA,IAAI,EAAE,UAD+B;AAErCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,MAAM,EAAE,EAFI;AAGZC,IAAAA,aAAa,EAAE,IAHH;AAIZC,IAAAA,SAAS,EAAE,KAJC;AAKZC,IAAAA,KAAK,EAAE;AALK,GAFuB;AASrCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,CAACC,KAAD,QAAqB;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;AAC/B,aAAO,EAAE,GAAGD,KAAL;AAAYN,QAAAA,MAAM,EAAEO;AAApB,OAAP;AACD,KAHO;;AAIRC,IAAAA,WAAW,CAACF,KAAD,SAAqB;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;AAC9B,aAAO,EAAE,GAAGD,KAAL;AAAYL,QAAAA,aAAa,EAAEM;AAA3B,OAAP;AACD;;AANO,GAT2B;AAiBrCE,EAAAA,aAAa,EAAE;AACb;AACE,KAAChB,aAAa,CAACiB,OAAf,GAA0BJ,KAAD,KAAY,EACrC,GAAGA,KADkC;AAErCJ,MAAAA,SAAS,EAAE,IAF0B;AAGrCC,MAAAA,KAAK,EAAE;AAH8B,KAAZ,CAFd;AAOb;AACE,KAACV,aAAa,CAACkB,SAAf,GAA2B,CAACL,KAAD;AAAA,UAAQ;AAAEC,QAAAA;AAAF,OAAR;AAAA,aAAyB,EACpD,GAAGD,KADiD;AAEpDJ,QAAAA,SAAS,EAAE,KAFyC;AAGpDH,QAAAA,KAAK,EAAE,CAAC,GAAGO,KAAK,CAACP,KAAV,EAAiBQ,OAAjB;AAH6C,OAAzB;AAAA,KARhB;AAab;AACE,KAACd,aAAa,CAACmB,QAAf,GAA0B,CAACN,KAAD;AAAA,UAAQ;AAAEC,QAAAA;AAAF,OAAR;AAAA,aAAyB,EACnD,GAAGD,KADgD;AAEnDJ,QAAAA,SAAS,EAAE,KAFwC;AAGnDC,QAAAA,KAAK,EAAEI;AAH4C,OAAzB;AAAA,KAdf;AAmBb;AACE,KAACZ,gBAAgB,CAACe,OAAlB,GAA6BJ,KAAD,KAAY,EACxC,GAAGA,KADqC;AAExCJ,MAAAA,SAAS,EAAE,IAF6B;AAGxCC,MAAAA,KAAK,EAAE;AAHiC,KAAZ,CApBjB;AAyBb;AACE,KAACR,gBAAgB,CAACgB,SAAlB,GAA8B,CAACL,KAAD;AAAA,UAAQ;AAAEC,QAAAA;AAAF,OAAR;AAAA,aAAyB,EACvD,GAAGD,KADoD;AAEvDJ,QAAAA,SAAS,EAAE,KAF4C;AAGvDC,QAAAA,KAAK,EAAE,IAHgD;AAIvDJ,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYC,MAAZ,CAAmB;AAAA,cAAC;AAAEa,YAAAA;AAAF,WAAD;AAAA,iBAAYA,EAAE,KAAKN,OAAnB;AAAA,SAAnB;AAJgD,OAAzB;AAAA,KA1BnB;AAgCb;AACE,KAACZ,gBAAgB,CAACiB,QAAlB,GAA8BN,KAAD,KAAY,EACzC,GAAGA,KADsC;AAEzCJ,MAAAA,SAAS,EAAE,KAF8B;AAGzCC,MAAAA,KAAK,EAAE;AAHkC,KAAZ,CAjClB;AAsCb,KAACT,aAAa,CAACgB,OAAf,GAA0BJ,KAAD,KAAY,EACnC,GAAGA,KADgC;AAEnCJ,MAAAA,SAAS,EAAE,IAFwB;AAGnCC,MAAAA,KAAK,EAAE;AAH4B,KAAZ,CAtCZ;AA2Cb,KAACT,aAAa,CAACiB,SAAf,GAA2B,CAACL,KAAD;AAAA,UAAQ;AAAEC,QAAAA;AAAF,OAAR;AAAA,aAAyB,EAClD,GAAGD,KAD+C;AAElDJ,QAAAA,SAAS,EAAE,KAFuC;AAGlDC,QAAAA,KAAK,EAAE,IAH2C;AAIlDJ,QAAAA,KAAK,EAAE,CAAC,GAAGQ,OAAJ;AAJ2C,OAAzB;AAAA,KA3Cd;AAiDb,KAACb,aAAa,CAACkB,QAAf,GAA0B,CAACN,KAAD;AAAA,UAAQ;AAAEC,QAAAA;AAAF,OAAR;AAAA,aAAyB,EACjD,GAAGD,KAD8C;AAEjDJ,QAAAA,SAAS,EAAE,KAFsC;AAGjDC,QAAAA,KAAK,EAAEI;AAH0C,OAAzB;AAAA;AAjDb;AAjBsB,CAAD,CAAjC;AA2EL,eAAeX,aAAa,CAACkB,OAA7B;AACA,OAAO,MAAM;AAAET,EAAAA,YAAF;AAAgBG,EAAAA;AAAhB,IAAgCZ,aAAa,CAACmB,OAApD","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n// import { addContact, fetchContacts, removeContact} from './operations'\n\nimport  {addContactApi, fetchContacts, removeContactApi} from './operations';\nexport const contactsSlice = createSlice({\n    name: \"contacts\",\n    initialState: {\n      items: [],\n      filter: \"\",\n      editedContact: null,\n      isLoading: false,\n      error: null,\n    },\n    reducers: {\n      changeFilter(state, { payload }) {\n        return { ...state, filter: payload };\n      },\n      editOnClick(state, { payload }) {\n        return { ...state, editedContact: payload };\n      },\n    },\n    extraReducers: {\n      // [addContact.pending]: (state) => ({\n        [addContactApi.pending]: (state) => ({\n        ...state,\n        isLoading: true,\n        error: null,\n      }),\n      // [addContact.fulfilled]: (state, { payload }) => ({\n        [addContactApi.fulfilled]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        items: [...state.items, payload],\n      }),\n      // [addContact.rejected]: (state, { payload }) => ({\n        [addContactApi.rejected]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        error: payload,\n      }),\n      // [removeContact.pending]: (state) => ({\n        [removeContactApi.pending]: (state) => ({\n        ...state,\n        isLoading: true,\n        error: null,\n      }),\n      // [removeContact.fulfilled]: (state, { payload }) => ({\n        [removeContactApi.fulfilled]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        error: null,\n        items: state.items.filter(({ id }) => id !== payload),\n      }),\n      // [removeContact.rejected]: (state) => ({\n        [removeContactApi.rejected]: (state) => ({\n        ...state,\n        isLoading: false,\n        error: null,\n      }),\n      [fetchContacts.pending]: (state) => ({\n        ...state,\n        isLoading: true,\n        error: null,\n      }),\n      [fetchContacts.fulfilled]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        error: null,\n        items: [...payload],\n      }),\n      [fetchContacts.rejected]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        error: payload,\n      }),\n     \n    },\n  });\n  \n  export default contactsSlice.reducer;\n  export const { changeFilter, editOnClick } = contactsSlice.actions;"]},"metadata":{},"sourceType":"module"}