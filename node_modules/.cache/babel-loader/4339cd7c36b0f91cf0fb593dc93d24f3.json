{"ast":null,"code":"var _jsxFileName = \"/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/components/Filter/Filter.jsx\",\n    _s = $RefreshSig$();\n\n// import { useRef } from 'react';\n// import PropTypes from 'prop-types';\n// import { nanoid } from 'nanoid';\n// import styles from './Filter.module.css'\n// const Filter = ({ value, onChange }) => {\n//     const filterInputId = useRef(nanoid())\n//   return (\n//     <>\n//       <label className={styles.label} htmlFor={filterInputId.current}> Find contacts by name</label>\n//       <input className={styles.input} type=\"text\" name=\"filter\" value={value} onChange={onChange}  />\n//     </>\n//   );\n// };\n// export default Filter;\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/selectors';\nimport phonebookActions from '../../redux/actions';\nimport styles from './Filter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filter = () => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const onChange = event => dispatch(phonebookActions.filterContacts(event.target.value));\n\n  const value = useSelector(getFilter);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.section,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.title,\n        children: \"Find contact by name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: value,\n        onChange: onChange,\n        className: styles.input,\n        placeholder: \"Find name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Filter, \"/A0nvjtmbwxG53osG7wkI0yjlGA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Filter;\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/components/Filter/Filter.jsx"],"names":["React","useSelector","useDispatch","getFilter","phonebookActions","styles","Filter","dispatch","onChange","event","filterContacts","target","value","section","title","input"],"mappings":";;;AAAA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AACA,QAAMM,QAAQ,GAAGC,KAAK,IAAIF,QAAQ,CAACH,gBAAgB,CAACM,cAAjB,CAAgCD,KAAK,CAACE,MAAN,CAAaC,KAA7C,CAAD,CAAlC;;AACA,QAAMA,KAAK,GAAGX,WAAW,CAACE,SAAD,CAAzB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEE,MAAM,CAACQ,OAAvB;AAAA,2BACE;AAAA,8BACE;AAAI,QAAA,SAAS,EAAER,MAAM,CAACS,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEF,KAHT;AAIE,QAAA,QAAQ,EAAEJ,QAJZ;AAKE,QAAA,SAAS,EAAEH,MAAM,CAACU,KALpB;AAME,QAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CApBD;;GAAMT,M;UACaJ,W,EAEHD,W;;;KAHVK,M;AAsBN,eAAeA,MAAf","sourcesContent":["// import { useRef } from 'react';\n// import PropTypes from 'prop-types';\n// import { nanoid } from 'nanoid';\n\n// import styles from './Filter.module.css'\n\n\n// const Filter = ({ value, onChange }) => {\n//     const filterInputId = useRef(nanoid())\n//   return (\n//     <>\n//       <label className={styles.label} htmlFor={filterInputId.current}> Find contacts by name</label>\n//       <input className={styles.input} type=\"text\" name=\"filter\" value={value} onChange={onChange}  />\n      \n//     </>\n//   );\n// };\n\n// export default Filter;\n\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/selectors';\nimport phonebookActions from '../../redux/actions';\nimport styles from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const onChange = event => dispatch(phonebookActions.filterContacts(event.target.value));\n  const value = useSelector(getFilter);\n\n  return (\n    <div className={styles.section}>\n      <label>\n        <h2 className={styles.title}>Find contact by name</h2>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={value}\n          onChange={onChange}\n          className={styles.input}\n          placeholder=\"Find name\"\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;"]},"metadata":{},"sourceType":"module"}