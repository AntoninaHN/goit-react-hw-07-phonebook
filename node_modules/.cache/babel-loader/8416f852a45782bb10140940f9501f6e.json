{"ast":null,"code":"// import { useState, useEffect } from 'react';\n// import { useDispatch, useSelector, shallowEqual } from 'react-redux';\n// import * as operations from '../../redux/operations'\n// import * as selectors from '../../redux/selectors';\n// import Filter from '../Filter';\n// import ContactList from '../ContactList';\n// import ContactForm from '../ContactForm';\n// import styles from './Phonebook.module.css';\n// const Phonebook = () => {\n//   const contacts = useSelector(selectors.getAllContacts, shallowEqual)\n//   const loading = useSelector(selectors.getContactsLoading, shallowEqual)\n//   const error = useSelector(selectors.getContactsError, shallowEqual)\n//   const dispatch = useDispatch();\n//   const [filter, setFilter] = useState('');\n//   useEffect(()=> {\n//     const getContacts = () => dispatch(operations.fetchContacts());\n//     getContacts();\n// }, [dispatch]);\n//   const addContact = info => {\n//    dispatch(operations.addContact(info))\n//   }\n//   const removeContact = id => dispatch(operations.removeContact(id))\n//   const changeFilter = (event => {\n//     const { value } = event.target;\n//     setFilter(value)\n//   });\n//   const filterContacts = () => {\n//     const normalizeFilter = filter.toLowerCase();\n//     const filteredContacts = contacts.filter(item => item.name.toLowerCase().includes(normalizeFilter));\n//     return filteredContacts; \n//   }\n//   return (\n//     <div className={styles.section}>\n//       <h2 className={styles.title}>Phonebook</h2>\n//       <ContactForm onChange={addContact} />\n//       <h2 className={styles.title}>Contacts</h2>\n//       {error && <p>Error while fetching</p>}\n//       {!error && Boolean(contacts.length) &&\n//       <> \n//       <Filter value={filter} \n//       onChange={changeFilter} \n//       />\n//       {loading && <p>Loading</p>}\n//       <ContactList contacts={filterContacts()} onDelete={removeContact} />\n//       </>}\n//     </div>\n//   );\n// };\n// export default Phonebook;","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/components/Phonebook/Phonebook.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import { useState, useEffect } from 'react';\n// import { useDispatch, useSelector, shallowEqual } from 'react-redux';\n// import * as operations from '../../redux/operations'\n// import * as selectors from '../../redux/selectors';\n\n// import Filter from '../Filter';\n// import ContactList from '../ContactList';\n// import ContactForm from '../ContactForm';\n\n// import styles from './Phonebook.module.css';\n\n// const Phonebook = () => {\n//   const contacts = useSelector(selectors.getAllContacts, shallowEqual)\n \n//   const loading = useSelector(selectors.getContactsLoading, shallowEqual)\n//   const error = useSelector(selectors.getContactsError, shallowEqual)\n//   const dispatch = useDispatch();\n\n//   const [filter, setFilter] = useState('');\n\n//   useEffect(()=> {\n//     const getContacts = () => dispatch(operations.fetchContacts());\n//     getContacts();\n// }, [dispatch]);\n\n\n//   const addContact = info => {\n//    dispatch(operations.addContact(info))\n//   }\n//   const removeContact = id => dispatch(operations.removeContact(id))\n//   const changeFilter = (event => {\n//     const { value } = event.target;\n\n//     setFilter(value)\n   \n//   });\n\n//   const filterContacts = () => {\n//     const normalizeFilter = filter.toLowerCase();\n//     const filteredContacts = contacts.filter(item => item.name.toLowerCase().includes(normalizeFilter));\n//     return filteredContacts; \n//   }\n\n//   return (\n//     <div className={styles.section}>\n//       <h2 className={styles.title}>Phonebook</h2>\n//       <ContactForm onChange={addContact} />\n//       <h2 className={styles.title}>Contacts</h2>\n//       {error && <p>Error while fetching</p>}\n//       {!error && Boolean(contacts.length) &&\n//       <> \n//       <Filter value={filter} \n//       onChange={changeFilter} \n//       />\n//       {loading && <p>Loading</p>}\n//       <ContactList contacts={filterContacts()} onDelete={removeContact} />\n//       </>}\n//     </div>\n//   );\n// };\n\n// export default Phonebook;\n"]},"metadata":{},"sourceType":"module"}