{"ast":null,"code":"var _jsxFileName = \"/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\";\nimport phonebookActions from \"./redux/actions\";\nimport { getContacts, getFilter } from \"./redux/selectors\";\nimport ContactList from \"./components/ContactList\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport styles from './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const contacts = useSelector(getContacts, shallowEqual);\n  const filter = useSelector(getFilter, shallowEqual);\n  const dispatch = useDispatch();\n\n  const addContact = data => {\n    const action = phonebookActions.addContact(data);\n    console.log(data);\n    const dublicate = contacts.find(item => item.name === data.name);\n\n    if (dublicate) {\n      alert(`${data.name} is already in contact list`);\n      return;\n    }\n\n    dispatch(action);\n  };\n\n  const deleteContact = id => {\n    dispatch(phonebookActions.deleteContact(id));\n  };\n\n  const changeFilter = _ref => {\n    let {\n      target\n    } = _ref;\n    dispatch(phonebookActions.filterContacts(target.value));\n  };\n\n  const getFilteredContacts = () => {\n    if (!filter) {\n      return contacts;\n    }\n\n    const filterText = filter.toLowerCase();\n    const filteredContacts = contacts.filter(_ref2 => {\n      let {\n        name\n      } = _ref2;\n      return name.toLowerCase().includes(filterText);\n    });\n    return filteredContacts;\n  };\n\n  const filteredContacts = getFilteredContacts();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      onSubmit: addContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filter: filter,\n      changeFilter: changeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: filteredContacts,\n      deleteContact: deleteContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"3R+rBFQxXNh0z/dkPO+3hsRF/P0=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/App.jsx"],"names":["useSelector","shallowEqual","useDispatch","phonebookActions","getContacts","getFilter","ContactList","ContactForm","Filter","styles","App","contacts","filter","dispatch","addContact","data","action","console","log","dublicate","find","item","name","alert","deleteContact","id","changeFilter","target","filterContacts","value","getFilteredContacts","filterText","toLowerCase","filteredContacts","includes","container"],"mappings":";;;AACA,SAASA,WAAT,EAAsBC,YAAtB,EAAoCC,WAApC,QAAuD,aAAvD;AAEA,OAAOC,gBAAP,MAA6B,iBAA7B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,mBAAvC;AAEA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAMC,QAAQ,GAAGX,WAAW,CAACI,WAAD,EAAcH,YAAd,CAA5B;AACA,QAAMW,MAAM,GAAGZ,WAAW,CAACK,SAAD,EAAYJ,YAAZ,CAA1B;AACA,QAAMY,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,QAAMY,UAAU,GAAIC,IAAD,IAAU;AAC3B,UAAMC,MAAM,GAAGb,gBAAgB,CAACW,UAAjB,CAA4BC,IAA5B,CAAf;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,UAAMI,SAAS,GAAGR,QAAQ,CAACS,IAAT,CAAcC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcP,IAAI,CAACO,IAAzC,CAAlB;;AACA,QAAGH,SAAH,EAAa;AACPI,MAAAA,KAAK,CAAE,GAAER,IAAI,CAACO,IAAK,6BAAd,CAAL;AACA;AACL;;AACDT,IAAAA,QAAQ,CAACG,MAAD,CAAR;AACD,GATD;;AAWA,QAAMQ,aAAa,GAAIC,EAAD,IAAQ;AAC5BZ,IAAAA,QAAQ,CAACV,gBAAgB,CAACqB,aAAjB,CAA+BC,EAA/B,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,QAAgB;AAAA,QAAf;AAAEC,MAAAA;AAAF,KAAe;AACnCd,IAAAA,QAAQ,CAACV,gBAAgB,CAACyB,cAAjB,CAAgCD,MAAM,CAACE,KAAvC,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAI,CAAClB,MAAL,EAAa;AACX,aAAOD,QAAP;AACD;;AACD,UAAMoB,UAAU,GAAGnB,MAAM,CAACoB,WAAP,EAAnB;AACA,UAAMC,gBAAgB,GAAGtB,QAAQ,CAACC,MAAT,CAAgB;AAAA,UAAC;AAACU,QAAAA;AAAD,OAAD;AAAA,aAAYA,IAAI,CAACU,WAAL,GAAmBE,QAAnB,CAA4BH,UAA5B,CAAZ;AAAA,KAAhB,CAAzB;AACA,WAAOE,gBAAP;AACD,GAPD;;AASA,QAAMA,gBAAgB,GAAGH,mBAAmB,EAA5C;AACA,sBACI;AAAK,IAAA,SAAS,EAAErB,MAAM,CAAC0B,SAAvB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAErB;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEF,MAAhB;AAAwB,MAAA,YAAY,EAAEc;AAAtC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEO,gBAAvB;AAAyC,MAAA,aAAa,EAAET;AAAxD;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASD,CA5CD;;GAAMd,G;UAEaV,W,EACFA,W,EACEE,W;;;KAJbQ,G;AA8CN,eAAeA,GAAf","sourcesContent":["\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\";\n\nimport phonebookActions from \"./redux/actions\";\nimport { getContacts, getFilter } from \"./redux/selectors\";\n\nimport ContactList from \"./components/ContactList\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\n\nimport styles from './App.css'\n\nconst App = () => {\n\n  const contacts = useSelector(getContacts, shallowEqual);\n  const filter = useSelector(getFilter, shallowEqual);\n  const dispatch = useDispatch();\n\n  const addContact = (data) => {\n    const action = phonebookActions.addContact(data);\n    console.log(data);\n    const dublicate = contacts.find(item => item.name === data.name);\n    if(dublicate){\n          alert(`${data.name} is already in contact list`);\n          return;\n    }\n    dispatch(action)\n  };\n\n  const deleteContact = (id) => {\n    dispatch(phonebookActions.deleteContact(id))\n  };\n\n  const changeFilter = ({ target }) => { \n    dispatch(phonebookActions.filterContacts(target.value));\n  };\n\n  const getFilteredContacts = () => {\n    if (!filter) {\n      return contacts\n    }\n    const filterText = filter.toLowerCase();\n    const filteredContacts = contacts.filter(({name}) => name.toLowerCase().includes(filterText));\n    return filteredContacts;\n  }\n\n  const filteredContacts = getFilteredContacts();\n  return (\n      <div className={styles.container}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={addContact} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} changeFilter={changeFilter} />\n        <ContactList contacts={filteredContacts} deleteContact={deleteContact} />\n      </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}