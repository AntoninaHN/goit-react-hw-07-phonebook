{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { removeContact, getContacts, addContact } from './operations';\nconst contactSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [],\n    isLoading: false,\n    error: null\n  },\n  extraReducers: {\n    [addContact.rejected]: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      return { ...state,\n        error: payload,\n        isLoading: false\n      };\n    },\n    [addContact.pending]: state => ({ ...state,\n      error: null,\n      isLoading: true\n    }),\n    [addContact.fulfilled]: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      return { ...state,\n        isLoading: false,\n        items: [...state.items, payload]\n      };\n    },\n    [getContacts.rejected]: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      return { ...state,\n        error: payload,\n        isLoading: false\n      };\n    },\n    [getContacts.pending]: state => ({ ...state,\n      error: null,\n      isLoading: true\n    }),\n    [getContacts.fulfilled]: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      return { ...state,\n        isLoading: false,\n        items: payload\n      };\n    },\n    [removeContact.pending]: state => ({ ...state,\n      error: null,\n      isLoading: true\n    }),\n    [removeContact.fulfilled]: (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      return { ...state,\n        isLoading: false,\n        items: state.items.filter(_ref6 => {\n          let {\n            id\n          } = _ref6;\n          return id !== payload;\n        })\n      };\n    },\n    [removeContact.rejected]: (state, _ref7) => {\n      let {\n        payload\n      } = _ref7;\n      return { ...state,\n        error: payload,\n        isLoading: false\n      };\n    }\n  }\n});\nexport default contactSlice.reducer;","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/redux/contacts/reducers.js"],"names":["createSlice","removeContact","getContacts","addContact","contactSlice","name","initialState","items","isLoading","error","extraReducers","rejected","state","payload","pending","fulfilled","filter","id","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,UAArC,QAAuD,cAAvD;AAEA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC/BK,EAAAA,IAAI,EAAE,UADyB;AAE/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,SAAS,EAAE,KAFC;AAGZC,IAAAA,KAAK,EAAE;AAHK,GAFiB;AAO/BC,EAAAA,aAAa,EAAE;AACb,KAACP,UAAU,CAACQ,QAAZ,GAAuB,CAACC,KAAD;AAAA,UAAQ;AAAEC,QAAAA;AAAF,OAAR;AAAA,aAAyB,EAC9C,GAAGD,KAD2C;AAE9CH,QAAAA,KAAK,EAAEI,OAFuC;AAG9CL,QAAAA,SAAS,EAAE;AAHmC,OAAzB;AAAA,KADV;AAMb,KAACL,UAAU,CAACW,OAAZ,GAAsBF,KAAK,KAAK,EAC9B,GAAGA,KAD2B;AAE9BH,MAAAA,KAAK,EAAE,IAFuB;AAG9BD,MAAAA,SAAS,EAAE;AAHmB,KAAL,CANd;AAWb,KAACL,UAAU,CAACY,SAAZ,GAAwB,CAACH,KAAD;AAAA,UAAQ;AAAEC,QAAAA;AAAF,OAAR;AAAA,aAAyB,EAC/C,GAAGD,KAD4C;AAE/CJ,QAAAA,SAAS,EAAE,KAFoC;AAG/CD,QAAAA,KAAK,EAAE,CAAC,GAAGK,KAAK,CAACL,KAAV,EAAiBM,OAAjB;AAHwC,OAAzB;AAAA,KAXX;AAgBb,KAACX,WAAW,CAACS,QAAb,GAAwB,CAACC,KAAD;AAAA,UAAQ;AAAEC,QAAAA;AAAF,OAAR;AAAA,aAAyB,EAC/C,GAAGD,KAD4C;AAE/CH,QAAAA,KAAK,EAAEI,OAFwC;AAG/CL,QAAAA,SAAS,EAAE;AAHoC,OAAzB;AAAA,KAhBX;AAqBb,KAACN,WAAW,CAACY,OAAb,GAAuBF,KAAK,KAAK,EAC/B,GAAGA,KAD4B;AAE/BH,MAAAA,KAAK,EAAE,IAFwB;AAG/BD,MAAAA,SAAS,EAAE;AAHoB,KAAL,CArBf;AA0Bb,KAACN,WAAW,CAACa,SAAb,GAAyB,CAACH,KAAD,YAAwB;AAAA,UAAhB;AAAEC,QAAAA;AAAF,OAAgB;AAC/C,aAAO,EACL,GAAGD,KADE;AAELJ,QAAAA,SAAS,EAAE,KAFN;AAGLD,QAAAA,KAAK,EAAEM;AAHF,OAAP;AAKD,KAhCY;AAiCb,KAACZ,aAAa,CAACa,OAAf,GAAyBF,KAAK,KAAK,EACjC,GAAGA,KAD8B;AAEjCH,MAAAA,KAAK,EAAE,IAF0B;AAGjCD,MAAAA,SAAS,EAAE;AAHsB,KAAL,CAjCjB;AAsCb,KAACP,aAAa,CAACc,SAAf,GAA2B,CAACH,KAAD;AAAA,UAAQ;AAAEC,QAAAA;AAAF,OAAR;AAAA,aAAyB,EAClD,GAAGD,KAD+C;AAElDJ,QAAAA,SAAS,EAAE,KAFuC;AAGlDD,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYS,MAAZ,CAAmB;AAAA,cAAC;AAAEC,YAAAA;AAAF,WAAD;AAAA,iBAAYA,EAAE,KAAKJ,OAAnB;AAAA,SAAnB;AAH2C,OAAzB;AAAA,KAtCd;AA2Cb,KAACZ,aAAa,CAACU,QAAf,GAA0B,CAACC,KAAD;AAAA,UAAQ;AAAEC,QAAAA;AAAF,OAAR;AAAA,aAAyB,EACjD,GAAGD,KAD8C;AAEjDH,QAAAA,KAAK,EAAEI,OAF0C;AAGjDL,QAAAA,SAAS,EAAE;AAHsC,OAAzB;AAAA;AA3Cb;AAPgB,CAAD,CAAhC;AA0DA,eAAeJ,YAAY,CAACc,OAA5B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { removeContact, getContacts, addContact } from './operations';\n\nconst contactSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [],\n    isLoading: false,\n    error: null,\n  },\n  extraReducers: {\n    [addContact.rejected]: (state, { payload }) => ({\n      ...state,\n      error: payload,\n      isLoading: false,\n    }),\n    [addContact.pending]: state => ({\n      ...state,\n      error: null,\n      isLoading: true,\n    }),\n    [addContact.fulfilled]: (state, { payload }) => ({\n      ...state,\n      isLoading: false,\n      items: [...state.items, payload],\n    }),\n    [getContacts.rejected]: (state, { payload }) => ({\n      ...state,\n      error: payload,\n      isLoading: false,\n    }),\n    [getContacts.pending]: state => ({\n      ...state,\n      error: null,\n      isLoading: true,\n    }),\n    [getContacts.fulfilled]: (state, { payload }) => {\n      return {\n        ...state,\n        isLoading: false,\n        items: payload,\n      };\n    },\n    [removeContact.pending]: state => ({\n      ...state,\n      error: null,\n      isLoading: true,\n    }),\n    [removeContact.fulfilled]: (state, { payload }) => ({\n      ...state,\n      isLoading: false,\n      items: state.items.filter(({ id }) => id !== payload),\n    }),\n    [removeContact.rejected]: (state, { payload }) => ({\n      ...state,\n      error: payload,\n      isLoading: false,\n    }),\n  },\n});\n\nexport default contactSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}