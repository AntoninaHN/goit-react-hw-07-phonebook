{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { addContact, fetchContacts, removeContact } from './operations';\nexport const contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState: {\n    items: [],\n    filter: \"\",\n    editedContact: null,\n    isLoading: false,\n    error: null\n  },\n  reducers: {\n    changeFilter(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      return { ...state,\n        filter: payload\n      };\n    } // editOnClick(state, { payload }) {\n    //   return { ...state, editedContact: payload };\n    // },\n\n\n  },\n  extraReducers: {\n    [addContact.pending]: state => ({ ...state,\n      isLoading: true,\n      error: null\n    }),\n    [addContact.fulfilled]: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      return { ...state,\n        isLoading: false,\n        items: [...state.items, payload]\n      };\n    },\n    [addContact.rejected]: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      return { ...state,\n        isLoading: false,\n        error: payload\n      };\n    },\n    [removeContact.pending]: state => ({ ...state,\n      isLoading: true,\n      error: null\n    }),\n    [removeContact.fulfilled]: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      return { ...state,\n        isLoading: false,\n        error: null,\n        items: state.items.filter(_ref5 => {\n          let {\n            id\n          } = _ref5;\n          return id !== payload;\n        })\n      };\n    },\n    [removeContact.rejected]: state => ({ ...state,\n      isLoading: false,\n      error: null\n    }),\n    [fetchContacts.pending]: state => ({ ...state,\n      isLoading: true,\n      error: null\n    }),\n    [fetchContacts.fulfilled]: (state, _ref6) => {\n      let {\n        payload\n      } = _ref6;\n      return { ...state,\n        isLoading: false,\n        error: null,\n        items: [...payload]\n      };\n    },\n    [fetchContacts.rejected]: (state, _ref7) => {\n      let {\n        payload\n      } = _ref7;\n      return { ...state,\n        isLoading: false,\n        error: payload\n      };\n    }\n  }\n});\nexport default contactsSlice.reducer;\nexport const {\n  changeFilter,\n  editOnClick\n} = contactsSlice.actions;","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/redux/slice.js"],"names":["createSlice","addContact","fetchContacts","removeContact","contactsSlice","name","initialState","items","filter","editedContact","isLoading","error","reducers","changeFilter","state","payload","extraReducers","pending","fulfilled","rejected","id","reducer","editOnClick","actions"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { addContact, fetchContacts, removeContact} from './operations'\nexport const contactsSlice = createSlice({\n    name: \"contacts\",\n    initialState: {\n      items: [],\n      filter: \"\",\n      editedContact: null,\n      isLoading: false,\n      error: null,\n    },\n    reducers: {\n      changeFilter(state, { payload }) {\n        return { ...state, filter: payload };\n      },\n      // editOnClick(state, { payload }) {\n      //   return { ...state, editedContact: payload };\n      // },\n    },\n    extraReducers: {\n      [addContact.pending]: (state) => ({\n        ...state,\n        isLoading: true,\n        error: null,\n      }),\n      [addContact.fulfilled]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        items: [...state.items, payload],\n      }),\n      [addContact.rejected]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        error: payload,\n      }),\n      [removeContact.pending]: (state) => ({\n        ...state,\n        isLoading: true,\n        error: null,\n      }),\n      [removeContact.fulfilled]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        error: null,\n        items: state.items.filter(({ id }) => id !== payload),\n      }),\n      [removeContact.rejected]: (state) => ({\n        ...state,\n        isLoading: false,\n        error: null,\n      }),\n      [fetchContacts.pending]: (state) => ({\n        ...state,\n        isLoading: true,\n        error: null,\n      }),\n      [fetchContacts.fulfilled]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        error: null,\n        items: [...payload],\n      }),\n      [fetchContacts.rejected]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        error: payload,\n      }),\n     \n    },\n  });\n  \n  export default contactsSlice.reducer;\n  export const { changeFilter, editOnClick } = contactsSlice.actions;"]},"metadata":{},"sourceType":"module"}