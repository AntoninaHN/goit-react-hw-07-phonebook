{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport * as operations from './operations';\nexport const contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState: {\n    items: [],\n    filter: \"\",\n    editedContact: null,\n    isLoading: false,\n    error: null\n  },\n  reducers: {\n    changeFilter(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      return { ...state,\n        filter: payload\n      };\n    },\n\n    editOnClick(state, _ref2) {\n      let {\n        payload\n      } = _ref2;\n      return { ...state,\n        editedContact: payload\n      };\n    }\n\n  },\n  extraReducers: {\n    [operations.operations.pending]: state => ({ ...state,\n      isLoading: true,\n      error: null\n    }),\n    [operations.addContact.fulfilled]: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      return { ...state,\n        isLoading: false,\n        items: [...state.items, payload]\n      };\n    },\n    [operations.addContact.rejected]: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      return { ...state,\n        isLoading: false,\n        error: payload\n      };\n    },\n    [operations.removeContact.pending]: state => ({ ...state,\n      isLoading: true,\n      error: null\n    }),\n    [operations.removeContact.fulfilled]: (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      return { ...state,\n        isLoading: false,\n        error: null,\n        items: state.items.filter(_ref6 => {\n          let {\n            id\n          } = _ref6;\n          return id !== payload;\n        })\n      };\n    },\n    [operations.removeContact.rejected]: state => ({ ...state,\n      isLoading: false,\n      error: null\n    }),\n    [operations.fetchContacts.pending]: state => ({ ...state,\n      isLoading: true,\n      error: null\n    }),\n    [operations.fetchContacts.fulfilled]: (state, _ref7) => {\n      let {\n        payload\n      } = _ref7;\n      return { ...state,\n        isLoading: false,\n        error: null,\n        items: [...payload]\n      };\n    },\n    [operations.fetchContacts.rejected]: (state, _ref8) => {\n      let {\n        payload\n      } = _ref8;\n      return { ...state,\n        isLoading: false,\n        error: payload\n      };\n    }\n  }\n});\nexport default contactsSlice.reducer;\nexport const {\n  changeFilter,\n  editOnClick\n} = contactsSlice.actions;","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/redux/slice.js"],"names":["createSlice","operations","contactsSlice","name","initialState","items","filter","editedContact","isLoading","error","reducers","changeFilter","state","payload","editOnClick","extraReducers","pending","addContact","fulfilled","rejected","removeContact","id","fetchContacts","reducer","actions"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport * as operations from './operations'\n\nexport const contactsSlice = createSlice({\n    name: \"contacts\",\n    initialState: {\n      items: [],\n      filter: \"\",\n      editedContact: null,\n      isLoading: false,\n      error: null,\n    },\n    reducers: {\n      changeFilter(state, { payload }) {\n        return { ...state, filter: payload };\n      },\n      editOnClick(state, { payload }) {\n        return { ...state, editedContact: payload };\n      },\n    },\n    extraReducers: {\n      [operations.operations.pending]: (state) => ({\n        ...state,\n        isLoading: true,\n        error: null,\n      }),\n      [operations.addContact.fulfilled]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        items: [...state.items, payload],\n      }),\n      [operations.addContact.rejected]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        error: payload,\n      }),\n      [operations.removeContact.pending]: (state) => ({\n        ...state,\n        isLoading: true,\n        error: null,\n      }),\n      [operations.removeContact.fulfilled]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        error: null,\n        items: state.items.filter(({ id }) => id !== payload),\n      }),\n      [operations.removeContact.rejected]: (state) => ({\n        ...state,\n        isLoading: false,\n        error: null,\n      }),\n      [operations.fetchContacts.pending]: (state) => ({\n        ...state,\n        isLoading: true,\n        error: null,\n      }),\n      [operations.fetchContacts.fulfilled]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        error: null,\n        items: [...payload],\n      }),\n      [operations.fetchContacts.rejected]: (state, { payload }) => ({\n        ...state,\n        isLoading: false,\n        error: payload,\n      }),\n     \n    },\n  });\n  \n  export default contactsSlice.reducer;\n  export const { changeFilter, editOnClick } = contactsSlice.actions;"]},"metadata":{},"sourceType":"module"}