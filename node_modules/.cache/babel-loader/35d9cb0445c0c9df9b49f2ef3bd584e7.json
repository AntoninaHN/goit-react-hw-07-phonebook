{"ast":null,"code":"var _jsxFileName = \"/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/components/Filter/Filter.jsx\";\nimport { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport styles from './Filter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Filter = _ref => {\n  let {\n    value,\n    onChange\n  } = _ref;\n  //const filterInputId = useRef(nanoid())\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: styles.label // htmlFor={filterInputId.current}\n      ,\n      children: \" Find contacts by name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: styles.input,\n      type: \"text\",\n      name: \"filter\",\n      value: value,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Filter;\nexport default Filter;\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/components/Filter/Filter.jsx"],"names":["useRef","PropTypes","nanoid","styles","Filter","value","onChange","label","input","propTypes","string","isRequired","func"],"mappings":";AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACC,SAASC,MAAT,QAAuB,QAAvB;AAED,OAAOC,MAAP,MAAmB,qBAAnB;;;;AAGA,MAAMC,MAAM,GAAG,QAAyB;AAAA,MAAxB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAwB;AACpC;AACF,sBACE;AAAA,4BACE;AAAO,MAAA,SAAS,EAAEH,MAAM,CAACI,KAAzB,CACD;AADC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAO,MAAA,SAAS,EAAEJ,MAAM,CAACK,KAAzB;AAAgC,MAAA,IAAI,EAAC,MAArC;AAA4C,MAAA,IAAI,EAAC,QAAjD;AAA0D,MAAA,KAAK,EAAEH,KAAjE;AAAwE,MAAA,QAAQ,EAAEC;AAAlF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AASD,CAXD;;KAAMF,M;AAaN,eAAeA,MAAf;AAEAA,MAAM,CAACK,SAAP,GAAmB;AACjBJ,EAAAA,KAAK,EAAEJ,SAAS,CAACS,MAAV,CAAiBC,UADP;AAEjBL,EAAAA,QAAQ,EAAEL,SAAS,CAACW,IAAV,CAAeD;AAFR,CAAnB","sourcesContent":["import { useRef } from 'react';\nimport PropTypes from 'prop-types';\n import { nanoid } from 'nanoid';\n\nimport styles from './Filter.module.css'\n\n\nconst Filter = ({ value, onChange }) => {\n    //const filterInputId = useRef(nanoid())\n  return (\n    <>\n      <label className={styles.label} \n     // htmlFor={filterInputId.current}\n      > Find contacts by name</label>\n      <input className={styles.input} type=\"text\" name=\"filter\" value={value} onChange={onChange}  />\n      \n    </>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n"]},"metadata":{},"sourceType":"module"}