{"ast":null,"code":"import { createSelector } from '@reduxjs/toolkit';\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;\nexport const getVisibleContacts = state => {\n  const filter = getFilter(state);\n  const contacts = getContacts(state);\n  if (filter === '') return contacts;\n  return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n};\nexport const getVisibleContactsMemo = createSelector([getFilter, getContacts], (filter, contacts) => filter === '' ? contacts : contacts.name.toLowerCase().includes(filter.toLowerCase()));","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/redux/selectors.js"],"names":["createSelector","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","contact","name","toLowerCase","includes","getVisibleContactsMemo"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AAEA,OAAO,MAAMC,WAAW,GAAGC,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,KAA5C;AACP,OAAO,MAAMC,SAAS,GAAGH,KAAK,IAAIA,KAAK,CAACI,MAAjC;AAEP,OAAO,MAAMC,kBAAkB,GAAGL,KAAK,IAAI;AACzC,QAAMI,MAAM,GAAGD,SAAS,CAACH,KAAD,CAAxB;AACA,QAAMC,QAAQ,GAAGF,WAAW,CAACC,KAAD,CAA5B;AAEA,MAAII,MAAM,KAAK,EAAf,EAAmB,OAAOH,QAAP;AACnB,SAAOA,QAAQ,CAACG,MAAT,CAAgBE,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCL,MAAM,CAACI,WAAP,EAApC,CAA3B,CAAP;AACD,CANM;AAQP,OAAO,MAAME,sBAAsB,GAAGZ,cAAc,CAAC,CAACK,SAAD,EAAYJ,WAAZ,CAAD,EAA2B,CAACK,MAAD,EAASH,QAAT,KAC7EG,MAAM,KAAK,EAAX,GAAgBH,QAAhB,GAA2BA,QAAQ,CAACM,IAAT,CAAcC,WAAd,GAA4BC,QAA5B,CAAqCL,MAAM,CAACI,WAAP,EAArC,CADuB,CAA7C","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;\n\nexport const getVisibleContacts = state => {\n  const filter = getFilter(state);\n  const contacts = getContacts(state);\n\n  if (filter === '') return contacts;\n  return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n};\n\nexport const getVisibleContactsMemo = createSelector([getFilter, getContacts], (filter, contacts) =>\n  filter === '' ? contacts : contacts.name.toLowerCase().includes(filter.toLowerCase()),\n);\n"]},"metadata":{},"sourceType":"module"}