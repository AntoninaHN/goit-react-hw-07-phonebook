{"ast":null,"code":"var _jsxFileName = \"/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/components/ContactForm/ContactForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: '',\n  number: ''\n};\n\nconst ContactForm = _ref => {\n  _s();\n\n  let {\n    onChange\n  } = _ref;\n  const [contact, setContact] = useState(initialState);\n  const nameInputId = useRef(nanoid());\n  const numberInputId = useRef(nanoid());\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setContact({ ...contact,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onChange(contact);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setContact(initialState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputList,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          htmlFor: nameInputId.current,\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.input,\n          type: \"text\",\n          name: \"name\",\n          value: contact.name,\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true,\n          onChange: handleChange,\n          id: nameInputId.current\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputList,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          htmlFor: numberInputId.current,\n          children: \"Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.input,\n          type: \"tel\",\n          name: \"number\",\n          value: contact.number,\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          onChange: handleChange,\n          required: true,\n          id: numberInputId.current\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ContactForm, \"CRv6NYwWd22LDmoQfAE2jsZrjis=\");\n\n_c = ContactForm;\nexport default ContactForm;\nContactForm.propTypes = {\n  onChange: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["useState","useRef","nanoid","PropTypes","styles","initialState","name","number","ContactForm","onChange","contact","setContact","nameInputId","numberInputId","handleChange","event","value","target","handleSubmit","preventDefault","resetForm","form","inputList","label","current","input","button","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import { useState, useRef } from 'react';\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactForm.module.css';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = ({ onChange }) => {\n  const [contact, setContact] = useState(initialState);\n  const nameInputId = useRef(nanoid());\n  const numberInputId = useRef(nanoid());\n  const handleChange = event => {\n    const { value, name } = event.target;\n    setContact({\n      ...contact,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onChange(contact);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setContact(initialState);\n  };\n\n  return (\n    <>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <div className={styles.inputList}>\n          <label className={styles.label} htmlFor={nameInputId.current}>\n            Name\n          </label>\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={contact.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n            id={nameInputId.current}\n          />\n        </div>\n        <div className={styles.inputList}>\n          <label className={styles.label} htmlFor={numberInputId.current}>\n            Number\n          </label>\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            value={contact.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            onChange={handleChange}\n            required\n            id={numberInputId.current}\n          />\n        </div>\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\n\n"]},"metadata":{},"sourceType":"module"}