{"ast":null,"code":"import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport * as operations from './operations';\nconst items = createReducer([], {\n  [operations.fetchContacts.fulfilled]: (_, _ref) => {\n    let {\n      payload\n    } = _ref;\n    return [...payload];\n  },\n  [operations.addContact.fulfilled]: (state, _ref2) => {\n    let {\n      payload\n    } = _ref2;\n    return [...state, payload];\n  },\n  [operations.removeContact.fulfilled]: (state, _ref3) => {\n    let {\n      payload\n    } = _ref3;\n    return state.filter(item => item.id !== payload);\n  }\n});\nconst error = createReducer(null, {\n  [operations.fetchContacts.rejected]: (_, _ref4) => {\n    let {\n      payload\n    } = _ref4;\n    return payload;\n  },\n  [operations.addContact.rejected]: (_, _ref5) => {\n    let {\n      payload\n    } = _ref5;\n    return payload;\n  },\n  [operations.removeContact.rejected]: (_, _ref6) => {\n    let {\n      payload\n    } = _ref6;\n    return payload;\n  }\n});\nconst contactsReducer = combineReducers({\n  items,\n  error\n});\nexport default contactsReducer;","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/redux/reducers.js"],"names":["createReducer","combineReducers","operations","items","fetchContacts","fulfilled","_","payload","addContact","state","removeContact","filter","item","id","error","rejected","contactsReducer"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,eAAxB,QAA+C,kBAA/C;AACA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AACA,MAAMC,KAAK,GAAGH,aAAa,CAAC,EAAD,EAAK;AAC5B,GAACE,UAAU,CAACE,aAAX,CAAyBC,SAA1B,GAAsC,CAACC,CAAD;AAAA,QAAI;AAACC,MAAAA;AAAD,KAAJ;AAAA,WAAkB,CAAC,GAAGA,OAAJ,CAAlB;AAAA,GADV;AAE5B,GAACL,UAAU,CAACM,UAAX,CAAsBH,SAAvB,GAAmC,CAACI,KAAD;AAAA,QAAQ;AAACF,MAAAA;AAAD,KAAR;AAAA,WAAsB,CAAC,GAAGE,KAAJ,EAAWF,OAAX,CAAtB;AAAA,GAFP;AAG5B,GAACL,UAAU,CAACQ,aAAX,CAAyBL,SAA1B,GAAsC,CAACI,KAAD;AAAA,QAAQ;AAACF,MAAAA;AAAD,KAAR;AAAA,WAAsBE,KAAK,CAACE,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYN,OAAjC,CAAtB;AAAA;AAHV,CAAL,CAA3B;AAOA,MAAMO,KAAK,GAAGd,aAAa,CAAC,IAAD,EAAO;AAC9B,GAACE,UAAU,CAACE,aAAX,CAAyBW,QAA1B,GAAqC,CAACT,CAAD;AAAA,QAAI;AAACC,MAAAA;AAAD,KAAJ;AAAA,WAAkBA,OAAlB;AAAA,GADP;AAE9B,GAACL,UAAU,CAACM,UAAX,CAAsBO,QAAvB,GAAkC,CAACT,CAAD;AAAA,QAAI;AAACC,MAAAA;AAAD,KAAJ;AAAA,WAAkBA,OAAlB;AAAA,GAFJ;AAG9B,GAACL,UAAU,CAACQ,aAAX,CAAyBK,QAA1B,GAAqC,CAACT,CAAD;AAAA,QAAI;AAACC,MAAAA;AAAD,KAAJ;AAAA,WAAkBA,OAAlB;AAAA;AAHP,CAAP,CAA3B;AAMA,MAAMS,eAAe,GAAGf,eAAe,CAAC;AACpCE,EAAAA,KADoC;AAGpCW,EAAAA;AAHoC,CAAD,CAAvC;AAKA,eAAeE,eAAf","sourcesContent":["import { createReducer, combineReducers } from '@reduxjs/toolkit'\nimport * as operations from './operations'\nconst items = createReducer([], {\n    [operations.fetchContacts.fulfilled]: (_, {payload}) => [...payload],\n    [operations.addContact.fulfilled]: (state, {payload}) => [...state, payload],\n    [operations.removeContact.fulfilled]: (state, {payload}) => state.filter(item => item.id !== payload)\n});\n\n\nconst error = createReducer(null, {\n    [operations.fetchContacts.rejected]: (_, {payload}) => payload,\n    [operations.addContact.rejected]: (_, {payload}) => payload,\n    [operations.removeContact.rejected]: (_, {payload}) => payload,\n});\n\nconst contactsReducer = combineReducers({\n    items,\n\n    error\n})\nexport default contactsReducer;"]},"metadata":{},"sourceType":"module"}