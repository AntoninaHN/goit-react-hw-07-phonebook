{"ast":null,"code":"var _jsxFileName = \"/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/components/ContactForm/ContactForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/operations\";\nimport styles from \"./ContactForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ContactForm() {\n  _s();\n\n  const dispatch = useDispatch();\n  const contactSelector = useSelector(state => state.contacts.items);\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const onAddContact = e => {\n    e.preventDefault();\n    const contact = {\n      name,\n      phone\n    };\n    console.log(addContact(contact));\n    console.log(contactSelector);\n    const isNameContact = contactSelector.some(e => e.name.toLowerCase() === name.toLowerCase());\n\n    if (isNameContact) {\n      return alert(`${name} is already in contacts.`);\n    }\n\n    dispatch(addContact(contact));\n    setName(\"\");\n    setPhone(\"\");\n  };\n\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    const {\n      name,\n      value\n    } = target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        return;\n\n      case \"phone\":\n        setPhone(value);\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onAddContact,\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: styles.label,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.message,\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Username can only contain letters\",\n        onChange: handleChange,\n        required: true,\n        placeholder: \"add name...\",\n        className: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: styles.label,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.message,\n        children: \"Phone number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"phone\",\n        value: phone,\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"\\nonly numbers and\\n'+' symbol in the beginning are accepted\",\n        onChange: handleChange,\n        required: true,\n        placeholder: \"add number\",\n        className: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: styles.button,\n      title: \"Add new contact\",\n      children: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactForm, \"9D+vtcqqMWP84evqwzsy/tPlHLI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ContactForm;\nexport default ContactForm; // import { useState } from 'react';\n// import PropTypes from 'prop-types';\n// import styles from './ContactForm.module.css';\n// function ContactForm  ({ onSubmit })  {\n//   const [state, setState] = useState({\n//     name: '',\n//     number: '',\n//   });\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     onSubmit({ ...state });\n//     setState({ name: '', number: '' });\n//   };\n//   const handleChange = e => {\n//     const { name, value } = e.currentTarget;\n//     setState({\n//       ...state,\n//       [name]: value,\n//     });\n//   };\n//   const { name, number } = state;\n//   return (\n//     <form className={styles.form} onSubmit={handleSubmit}>\n//       <label className={styles.label} htmlFor=\"name\">\n//         Name \n//       </label>\n//       <input\n//         value={name}\n//         type=\"text\"\n//         name=\"name\"\n//         id=\"name\"\n//         placeholder=\"Enter Name\"\n//         pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//         title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//         required\n//         onChange={handleChange}\n//         className={styles.input}\n//       />\n//       <br />\n//       <label className={styles.label} htmlFor=\"tel\">\n//         Number\n//       </label>\n//       <input\n//         value={number}\n//         type=\"tel\"\n//         name=\"number\"\n//         id=\"tel\"\n//         placeholder=\"Enter Number\"\n//         pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//         title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//         required\n//         onChange={handleChange}\n//         className={styles.input}\n//       />\n//       <br />\n//       <button className={styles.button} type=\"submit\">\n//         Add Contact\n//       </button>\n//     </form>\n//   );\n// };\n// export default ContactForm;\n// ContactForm.defaultProps = {\n//   onSubmit: function () {},\n// };\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["React","useState","useDispatch","useSelector","addContact","styles","ContactForm","dispatch","contactSelector","state","contacts","items","name","setName","phone","setPhone","onAddContact","e","preventDefault","contact","console","log","isNameContact","some","toLowerCase","alert","handleChange","target","value","form","label","message","input","button"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/operations\";\nimport styles from \"./ContactForm.module.css\";\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contactSelector = useSelector((state) => state.contacts.items);\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const onAddContact = (e) => {\n    e.preventDefault();\n    const contact = { name, phone };\n    console.log(addContact(contact));\n    console.log(contactSelector);\n    const isNameContact = contactSelector.some(\n      (e) => e.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isNameContact) {\n      return alert(`${name} is already in contacts.`);\n    }\n    dispatch(addContact(contact));\n    setName(\"\");\n    setPhone(\"\");\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        return;\n      case \"phone\":\n        setPhone(value);\n        return;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form onSubmit={onAddContact} className={styles.form}>\n      <label className={styles.label}>\n        <span className={styles.message}>Name</span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Username can only contain letters\"\n          onChange={handleChange}\n          required\n          placeholder=\"add name...\"\n          className={styles.input}\n        />\n      </label>\n      <label className={styles.label}>\n        <span className={styles.message}>Phone number</span>\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"\nonly numbers and\n'+' symbol in the beginning are accepted\"\n          onChange={handleChange}\n          required\n          placeholder=\"add number\"\n          className={styles.input}\n        />\n      </label>\n      <button type=\"submit\" className={styles.button} title=\"Add new contact\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n\n\n\n\n// import { useState } from 'react';\n// import PropTypes from 'prop-types';\n// import styles from './ContactForm.module.css';\n\n// function ContactForm  ({ onSubmit })  {\n//   const [state, setState] = useState({\n//     name: '',\n//     number: '',\n//   });\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     onSubmit({ ...state });\n//     setState({ name: '', number: '' });\n//   };\n\n//   const handleChange = e => {\n//     const { name, value } = e.currentTarget;\n//     setState({\n//       ...state,\n//       [name]: value,\n//     });\n//   };\n\n//   const { name, number } = state;\n\n//   return (\n//     <form className={styles.form} onSubmit={handleSubmit}>\n//       <label className={styles.label} htmlFor=\"name\">\n//         Name \n//       </label>\n//       <input\n//         value={name}\n//         type=\"text\"\n//         name=\"name\"\n//         id=\"name\"\n//         placeholder=\"Enter Name\"\n//         pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//         title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//         required\n//         onChange={handleChange}\n//         className={styles.input}\n//       />\n//       <br />\n//       <label className={styles.label} htmlFor=\"tel\">\n//         Number\n//       </label>\n//       <input\n//         value={number}\n//         type=\"tel\"\n//         name=\"number\"\n//         id=\"tel\"\n//         placeholder=\"Enter Number\"\n//         pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//         title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//         required\n//         onChange={handleChange}\n//         className={styles.input}\n//       />\n//       <br />\n//       <button className={styles.button} type=\"submit\">\n//         Add Contact\n//       </button>\n//     </form>\n//   );\n// };\n\n// export default ContactForm;\n\n// ContactForm.defaultProps = {\n//   onSubmit: function () {},\n// };\n\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };"]},"metadata":{},"sourceType":"module"}