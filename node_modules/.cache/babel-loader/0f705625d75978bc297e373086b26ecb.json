{"ast":null,"code":"import _slicedToArray from\"/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import{useDispatch,useSelector,shallowEqual}from'react-redux';import*as operations from'../../redux/operations';import*as selectors from'../../redux/selectors';import Filter from'../Filter';import ContactList from'../ContactList';import ContactForm from'../ContactForm';import styles from'./Phonebook.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Phonebook=function Phonebook(){var contacts=useSelector(selectors.getAllContacts,shallowEqual);var loading=useSelector(selectors.getContactsLoading,shallowEqual);var error=useSelector(selectors.getContactsError,shallowEqual);var dispatch=useDispatch();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),filter=_useState2[0],setFilter=_useState2[1];useEffect(function(){var getContacts=function getContacts(){return dispatch(operations.fetchContacts());};getContacts();},[dispatch]);var addContact=function addContact(info){dispatch(operations.addContact(info));};var removeContact=function removeContact(id){return dispatch(operations.removeContact(id));};var changeFilter=function changeFilter(event){var value=event.target.value;setFilter(value);};var filterContacts=function filterContacts(){var normalizeFilter=filter.toLowerCase();var filteredContacts=contacts.filter(function(item){return item.name.toLowerCase().includes(normalizeFilter);});return filteredContacts;};return/*#__PURE__*/_jsxs(\"div\",{className:styles.section,children:[/*#__PURE__*/_jsx(\"h2\",{className:styles.title,children:\"Phonebook\"}),/*#__PURE__*/_jsx(ContactForm,{onChange:addContact}),/*#__PURE__*/_jsx(\"h2\",{className:styles.title,children:\"Contacts\"}),error&&/*#__PURE__*/_jsx(\"p\",{children:\"Error while fetching\"}),!error&&Boolean(contacts.length)&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Filter,{value:filter,onChange:changeFilter}),loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading\"}),/*#__PURE__*/_jsx(ContactList,{contacts:filterContacts(),onDelete:removeContact})]})]});};export default Phonebook;","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-07-phonebook/src/components/Phonebook/Phonebook.jsx"],"names":["useState","useEffect","useDispatch","useSelector","shallowEqual","operations","selectors","Filter","ContactList","ContactForm","styles","Phonebook","contacts","getAllContacts","loading","getContactsLoading","error","getContactsError","dispatch","filter","setFilter","getContacts","fetchContacts","addContact","info","removeContact","id","changeFilter","event","value","target","filterContacts","normalizeFilter","toLowerCase","filteredContacts","item","name","includes","section","title","Boolean","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport * as operations from '../../redux/operations'\nimport * as selectors from '../../redux/selectors';\n\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\nimport ContactForm from '../ContactForm';\n\nimport styles from './Phonebook.module.css';\n\nconst Phonebook = () => {\n  const contacts = useSelector(selectors.getAllContacts, shallowEqual)\n \n  const loading = useSelector(selectors.getContactsLoading, shallowEqual)\n  const error = useSelector(selectors.getContactsError, shallowEqual)\n  const dispatch = useDispatch();\n\n  const [filter, setFilter] = useState('');\n\n  useEffect(()=> {\n    const getContacts = () => dispatch(operations.fetchContacts());\n    getContacts();\n}, [dispatch]);\n\n\n  const addContact = info => {\n   dispatch(operations.addContact(info))\n  }\n  const removeContact = id => dispatch(operations.removeContact(id))\n  const changeFilter = (event => {\n    const { value } = event.target;\n\n    setFilter(value)\n   \n  });\n\n  const filterContacts = () => {\n    const normalizeFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(item => item.name.toLowerCase().includes(normalizeFilter));\n    return filteredContacts; \n  }\n\n  return (\n    <div className={styles.section}>\n      <h2 className={styles.title}>Phonebook</h2>\n      <ContactForm onChange={addContact} />\n      <h2 className={styles.title}>Contacts</h2>\n      {error && <p>Error while fetching</p>}\n      {!error && Boolean(contacts.length) &&\n      <> \n      <Filter value={filter} \n      onChange={changeFilter} \n      />\n      {loading && <p>Loading</p>}\n      <ContactList contacts={filterContacts()} onDelete={removeContact} />\n      </>}\n    </div>\n  );\n};\n\nexport default Phonebook;\n"]},"metadata":{},"sourceType":"module"}